@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ActionName</title>
</head>
<body>
    <div>The controller is:@ViewBag.Controller</div>
    <div>The action is:@ViewBag.Action</div>
    <div>@Html.ActionLink("This is an outgoing URL", "CustomVariable")</div>
    <div>
        <!--通过指定控制器来实现一个以不同控制器为目标的输出 URL -->
        @Html.ActionLink("This targets another controller", "Index", "Admin")
    </div>
    <div>
        <!--使用匿名类型给片段变量提供值-->
        @Html.ActionLink("This is an outgoing URL", "CustomVariable", new { id = "Hello" })
    </div>
    <div>
        <!--生成一个带有标签属性的锚点元素。class 之前使用@字符作为前缀，这是一条 C# 语言特性，它让用户能够用保留关键字作为 class 成员的名字（即以 class 作为该匿名类型的一个成员）-->
        @Html.ActionLink("This is an outgoing URL", "Index", "Home", null, new { id = "myAchorID", @class = "myCSSClass" })
    </div>
    <div>
        <!--生成权限定 URL -->
        @Html.ActionLink("This is an outgoing URL", "Index", "Home", "https", "myserver.mydomain.com", " myFragmentName", new { id = "myId" }
                          , new { id = "myAchorID", @class = "myCSSClass" })
    </div>
    <div>
        This is a URL:
        @Url.Action("Index", "Home", new { id = "MyId" })
    </div>
    <div>
        @* 经由自定义路由生成一个输出 URL *@
        This is a URL:
        @Html.ActionLink("Click me", "GetLegacyURL", new { legacyURL = "~/articles/Windows_3.1_Overview.html" })
    </div>
</body>
</html>
